<?xml version="1.0" encoding="UTF-8"?>
<project name="JMB Donation" default="make" basedir=".">
	<tstamp>
		<format property="build.date" pattern="%Y-%m-%d" />
	</tstamp>

	<property file="build.ini" />

	<target name="help">
		<echo>Use `$ phing -l` to list the available targets.</echo>
	</target>

	<target name="make-dev" description="Builds the extension release package for development testing.">
		<echo msg="Deleting old development build." />
		<delete quiet="yes" includeemptydirs="true">
			<fileset dir="releases">
				<include name="plg_${extension}_dev.zip" />
			</fileset>
		</delete>

		<echo msg="Making the development ${extension} package." />

		<mkdir dir="releases" />

		<zip destfile="releases/plg_${extension}_dev.zip">
			<fileset dir=".">
				<include name="fields/**" />
				<include name="language/**" />
				<include name="layouts/**" />
				<include name="media/**" />
				<include name="license.*" />
				<include name="install.php" />
				<include name="${extension}.*" />
			</fileset>
		</zip>
	</target>

	<target name="make" description="Builds the extension release package for a version.">
		<echo msg="Making the ${extension} package for version ${version}." />

		<zip destfile="releases/plg_${extension}_${version}.zip">
			<fileset dir=".">
				<include name="fields/**" />
				<include name="language/**" />
				<include name="layouts/**" />
				<include name="media/**" />
				<include name="license.*" />
				<include name="install.php" />
				<include name="${extension}.*" />
			</fileset>
		</zip>
	</target>

	<target name="tag" description="Tags the repository using git.">
		<gitcommit repository="." message="Tagging release `${version}`." allFiles="true" />
		<gittag repository="." name="${version}" annotate="true" message="${version}" />
		<echo>Push tags manually with `$ git push --tags origin`.</echo>
	</target>

	<target name="set-version" description="Sets the &lt;version&gt; tag in all XML files with the version from the build.ini file.">
		<phingcall target="replace-xml">
			<property name="tag" value="version" />
			<property name="tagValue" value="${version}" />
		</phingcall>
	</target>

	<target name="replace-xml" description="[PRIVATE] Sets an XML tag with a new value.">
		<echo message="Replacing '${tag}' tag with '${tagValue}'."/>
		<reflexive>
			<fileset dir=".">
				<include pattern="**/*.xml" />
			</fileset>
			<filterchain>
				<replaceregexp>
					<regexp pattern="&lt;${tag}&gt;(.*?)&lt;/${tag}&gt;"
							replace="&lt;${tag}&gt;${tagValue}&lt;/${tag}&gt;"/>
				</replaceregexp>
			</filterchain>
		</reflexive>
	</target>
</project>
